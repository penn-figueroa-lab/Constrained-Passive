#include <ros/ros.h>
#include <std_msgs/String.h>
#include <std_msgs/Float32MultiArray.h>

float message_received[8] = {0, 0, 0, 0, 0, 0, 0, 0};

void controller_callback(std_msgs::Float32MultiArray msg)
{
    for(int i = 0; i<8; i++)
    {
        message_received[i] = msg.data[i];
    }
}

int main(int argc, char *argv[])
{
    ros::init(argc, argv, "controller_node");
    printf("controller_node initialized!\n");

    ros::NodeHandle nh;
    ros::Publisher pub_state = nh.advertise<std_msgs::Float32MultiArray>("controller_topic_state", 10);


    ros::Rate loop_rate(10);

    ros::Subscriber sub = nh.subscribe("Control_signals", 10, controller_callback);

    while(ros::ok())
    {
        std_msgs::Float32MultiArray msg_state;

        // msg_q.data = {0.05359539199050214, -0.044198560918715546, -0.05249662902800909, -1.625663574170226, -0.18068303553686593, 1.8022785638216225, -0.10481122283262267};
        // msg_q_dot.data = {-0.81331918147733, -0.5844145568160118, 0.7797690176214568, -0.6428492273811132, -1.3744609434134885, -1.067545423994018, -1.2370545904305397};
        // msg_xdot.data = {-0.27828102532280596, -0.1517350978698014, -0.08318891862551675};
        // msg_end_pos.data = {0.5629440069893247, -0.01501584720375444, 0.6469865640884718};
        // msg_b.data = {-0.74701292,  0.00547577, -0.7987463,   0.04885487,  0.01483464, -0.00603547, -0.00137577};
        // msg_MassMatrix.data = {1.381901376694482, 0.0635615304972846, 1.4074609801152966, -0.003713122820669137, 0.04155401893217544, 0.016716694922657798, -0.0011185551007972918, 
        //                   0.0635615304972846, 2.7287215760527537, 0.06001685658136526, -1.290442479756012, 0.0077955921562255365, -0.060588224912885645, -0.00021424575574748508, 
        //                   1.4074609801152966, 0.06001685658136526, 1.4553724874587495, -0.0004201420626137029, 0.041771587620980856, 0.01729673390503457, -0.0011282592991016976, 
        //                 -0.003713122820669137, -1.290442479756012, -0.0004201420626137029, 1.0236275245437136, -0.006689191531828935, 0.07615233545613836, 0.00020373457856711377, 
        //                   0.04155401893217544, 0.0077955921562255365, 0.041771587620980856, -0.006689191531828935, 0.023317903597686117, 1.1117547814565096e-07, 0.000267230602709386, 
        //                   0.016716694922657798, -0.060588224912885645, 0.01729673390503457, 0.07615233545613836, 1.1117547814565096e-07, 0.02811996621752609, 5.7036395142184674e-15, 
        //                  -0.0011185551007972918, -0.00021424575574748508, -0.0011282592991016976, 0.00020373457856711377, 0.000267230602709386, 5.7036395142184674e-15, 0.0011648071098918457};
        // msg_Jacobian.data = { 1.51680014e-02,  5.62665853e-01, -1.38777878e-17,
        //                       3.13453144e-01,  1.68157481e-02, -5.61045381e-01,
        //                       1.44101984e-02,  5.75966023e-01,  2.00101647e-03,
        //                       5.39404223e-03, -1.13951199e-03,  4.94170059e-01,
        //                      -2.56888525e-04,  8.26248236e-02, -1.48948162e-02,
        //                       8.50927848e-02,  1.96518307e-02,  1.07545449e-01,
        //                       0.00000000e+00,  0.00000000e+00,  0.00000000e+00};
        
        msg_state.data = {0.05359539199050214, -0.044198560918715546, -0.05249662902800909, -1.625663574170226, -0.18068303553686593, 1.8022785638216225, -0.10481122283262267,
                         -0.81331918147733, -0.5844145568160118, 0.7797690176214568, -0.6428492273811132, -1.3744609434134885, -1.067545423994018, -1.2370545904305397,
                         -0.27828102532280596, -0.1517350978698014, -0.08318891862551675,
                          0.5629440069893247, -0.01501584720375444, 0.6469865640884718,
                         -0.74701292,  0.00547577, -0.7987463, 0.04885487, 0.01483464, -0.00603547, -0.00137577,
                          1.381901376694482, 0.0635615304972846, 1.4074609801152966, -0.003713122820669137, 0.04155401893217544, 0.016716694922657798, -0.0011185551007972918, 
                          0.0635615304972846, 2.7287215760527537, 0.06001685658136526, -1.290442479756012, 0.0077955921562255365, -0.060588224912885645, -0.00021424575574748508, 
                          1.4074609801152966, 0.06001685658136526, 1.4553724874587495, -0.0004201420626137029, 0.041771587620980856, 0.01729673390503457, -0.0011282592991016976, 
                         -0.003713122820669137, -1.290442479756012, -0.0004201420626137029, 1.0236275245437136, -0.006689191531828935, 0.07615233545613836, 0.00020373457856711377, 
                          0.04155401893217544, 0.0077955921562255365, 0.041771587620980856, -0.006689191531828935, 0.023317903597686117, 1.1117547814565096e-07, 0.000267230602709386, 
                          0.016716694922657798, -0.060588224912885645, 0.01729673390503457, 0.07615233545613836, 1.1117547814565096e-07, 0.02811996621752609, 5.7036395142184674e-15, 
                         -0.0011185551007972918, -0.00021424575574748508, -0.0011282592991016976, 0.00020373457856711377, 0.000267230602709386, 5.7036395142184674e-15, 0.0011648071098918457,
                          1.51680014e-02,  5.62665853e-01, -1.38777878e-17,
                          3.13453144e-01,  1.68157481e-02, -5.61045381e-01,
                          1.44101984e-02,  5.75966023e-01,  2.00101647e-03,
                          5.39404223e-03, -1.13951199e-03,  4.94170059e-01,
                         -2.56888525e-04,  8.26248236e-02, -1.48948162e-02,
                          8.50927848e-02,  1.96518307e-02,  1.07545449e-01,
                          0.00000000e+00,  0.00000000e+00,  0.00000000e+00};

        // msg.data = {12.234, 123.345};
        pub_state.publish(msg_state);

        printf("%4.2f\n", message_received[0]);
        loop_rate.sleep();
        ros::spinOnce();
    }
    return 0;
}

